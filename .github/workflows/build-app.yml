name: Build App

on:
  workflow_call:
    inputs:
      repo:
        type: string
        required: true
      cache_requirements:
        type: boolean
        default: true
      working_directory:
        type: string
        default: .

env:
  AR_REPO: ${{ inputs.repo }}

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - id: "auth"
        if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'codecov' }}
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2.1.2"
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ secrets.CODECOV_GCP_WIDP }}
          service_account: ${{ secrets.CODECOV_GCP_WIDSA }}

      - name: Docker configuration
        if: ${{ !github.event.pull_request.head.repo.fork && github.repository_owner == 'codecov' }}
        run: |-
          echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://us-docker.pkg.dev

      - name: Cache Requirements
        id: cache-requirements
        if: inputs.cache_requirements
        uses: actions/cache@v4
        env:
          cache-name: ${{ inputs.repo }}-requirements
        with:
          path: |
            ${{ inputs.working_directory }}/requirements.tar
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles(format('{0}/**/requirements.txt', inputs.working_directory)) }}-${{ hashFiles(format('{0}/**/docker/Dockerfile.requirements', inputs.working_directory)) }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Cache App
        id: cache-app
        uses: actions/cache@v4
        env:
          cache-name: ${{ inputs.repo }}-app
        with:
          path: |
            ${{ inputs.working_directory }}/app.tar
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.run_id }}

      - name: Load requirements from cache
        if: ${{ steps.cache-requirements.outputs.cache-hit == 'true' && inputs.cache_requirements }}
        run: |
          make load.requirements

      - name: Build/pull requirements
        if: ${{ steps.cache-requirements.outputs.cache-hit != 'true' && inputs.cache_requirements }}
        run: |
          make build.requirements
          make save.requirements

      - name: Push Requirements
        if: ${{ steps.cache-requirements.outputs.cache-hit != 'true' && !github.event.pull_request.head.repo.fork && github.repository_owner == 'codecov' && inputs.cache_requirements }}
        run: |
          make push.requirements
      - name: Build app
        run: |
          make build.app
          make save.app
